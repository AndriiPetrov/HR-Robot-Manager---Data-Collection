<Activity mc:Ignorable="sap sap2010 sads" x:Class="SaveFullInFileToTheDataBase"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="RecipientDT" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="DT_WithAllRecipients" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="RecipientsFilePath" Type="InArgument(x:String)" />
    <x:Property Name="MailUsername" Type="InArgument(x:String)" />
    <x:Property Name="MailPassword" Type="InArgument(x:String)" />
    <x:Property Name="HireFromPath" Type="InArgument(x:String)" />
    <x:Property Name="AllFulFilledFormFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SaveFullInFileToTheDataBase_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Global" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="SaveFullInFileToTheDataBase" Name="compName" />
      <Variable x:TypeArguments="x:String" Name="wbSheet" />
      <Variable x:TypeArguments="x:String" Name="textDTrecipient" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="workbookSheetsOfAllFulfilledRecipients" />
      <Variable x:TypeArguments="x:Int32" Name="countOfSheetsFulfilledRecipients" />
      <Variable x:TypeArguments="x:String" Name="status" />
      <Variable x:TypeArguments="x:String" Name="recipientEmail" />
      <Variable x:TypeArguments="x:String" Name="pathFolder" />
      <Variable x:TypeArguments="x:String" Name="filePath" />
      <Variable x:TypeArguments="x:Boolean" Name="fileExist" />
      <Variable x:TypeArguments="x:String" Name="indexOfAColumn" />
      <Variable x:TypeArguments="x:String" Name="indexOfARow" />
      <Variable x:TypeArguments="x:String" Name="existingSheet" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start: &quot; + compName]" />
    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="// If everything is allright with the Full_in sheet - then save it to the database. In over case it's excel file where all user's file will be saved" />
    <Sequence DisplayName="Main" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[RecipientDT]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Status" DisplayName="Get Row Item: Status" sap2010:WorkflowViewState.IdRef="GetRowItem_1" Row="[row]">
                <ui:GetRowItem.Value>
                  <OutArgument x:TypeArguments="x:String">[status]</OutArgument>
                </ui:GetRowItem.Value>
              </ui:GetRowItem>
              <If Condition="[status = &quot;Readed&quot;]" DisplayName="If: Status is &quot;Readed&quot;" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="Email" DisplayName="Get Row Item: recipientEmail" sap2010:WorkflowViewState.IdRef="GetRowItem_2" Row="[row]">
                      <ui:GetRowItem.Value>
                        <OutArgument x:TypeArguments="x:String">[recipientEmail]</OutArgument>
                      </ui:GetRowItem.Value>
                    </ui:GetRowItem>
                    <TryCatch DisplayName="Try Catch: filePath exist" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                      <TryCatch.Try>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <Assign DisplayName="Assign: pathFolder" sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[pathFolder]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Path.Combine(Environment.CurrentDirectory, "Attachments", recipientEmail)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign: filePath" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[filePath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Directory.GetFiles(pathFolder)(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:PathExists DisplayName="Path Exists: filePath" Exists="[fileExist]" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[filePath]" PathType="File" />
                          <If Condition="[fileExist]" DisplayName="If: filePath exist?" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Else>
                              <Throw DisplayName="Throw AE" Exception="[new Exception(compName + &quot;| filePath are not Exist&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <Sequence DisplayName="Sequence for change Status in the excel and in the RecipientDT, DT_WithAllRecipients" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="We are sorry for the letter, but due to the technical reason please send us fulFilled Hire Form again. We sended you a sample of the form as well. Just in case if you forgot, how it look likes." DisplayName="Send SMTP Mail Message" Email="[MailUsername]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="False" Name="HR Manager Robot" Password="[MailPassword]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Hire Form" To="[recipientEmail]">
                                  <ui:SendMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                      <InArgument x:TypeArguments="x:String">[HireFromPath]</InArgument>
                                    </scg:List>
                                  </ui:SendMail.Files>
                                </ui:SendMail>
                                <Assign DisplayName="Assign testVariable" sap2010:WorkflowViewState.IdRef="Assign_6">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[indexOfAColumn]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[Convert.ToChar(65+DT_WithAllRecipients.Columns.IndexOf("Status") ).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign testVariableIndex" sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[indexOfARow]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[(DT_WithAllRecipients.Rows.IndexOf(DT_WithAllRecipients.Select("Email =" + "'" + recipientEmail + "'")(0)) + 2).ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[indexOfARow]" />
                                <ui:WriteCell Cell="[indexOfAColumn + indexOfARow]" DisplayName="Write Cell: To the Recipient.xlsx" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Sheet1" Text="Sended" WorkbookPath="[RecipientsFilePath]" />
                                <Assign DisplayName="Assign: To the RecipientDT Status = Sender" sap2010:WorkflowViewState.IdRef="Assign_8">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[row.Item("Status")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">["Sended"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign: To The DT_WithAllRecipients" sap2010:WorkflowViewState.IdRef="Assign_9">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[DT_WithAllRecipients.Rows(Convert.ToInt32(indexOfARow) - 2).Item("Status")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">["Sended"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_1" />
                              </Sequence>
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: AllFulfilledForms.xlsx" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" WorkbookPath="AllFulfilledHireForms\AllFulfilledForms.xlsx">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets: form AllFulfilledForms" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_2" Sheets="[workbookSheetsOfAllFulfilledRecipients]" />
                            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each: sheet of this workbookSheetsOfAllFulfilledRecipients" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[workbookSheetsOfAllFulfilledRecipients]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                    <If Condition="[item.ToString = recipientEmail]" DisplayName="If: recipient already exist in DB?" sap2010:WorkflowViewState.IdRef="If_3">
                                      <If.Then>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                                          <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_2" Index="[workbookSheetsOfAllFulfilledRecipients.IndexOf(item)]" Sheet="[existingSheet]" />
                                          <ui:ExcelReadRange DataTable="{x:Null}" AddHeaders="True" DisplayName="Read Range: existing Sheet" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[existingSheet]">
                                            <ui:ExcelReadRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:ExcelReadRange.Range>
                                          </ui:ExcelReadRange>
                                          <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey 'EXCEL7'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="hds" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="False">
                                            <ui:SendHotkey.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6dac97812ce36dad503c10224f9a4546" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='AllFulfilledForms.xlsx - Excel' /&gt;&lt;wnd cls='EXCEL7' title='AllFulfilledForms.xlsx' /&gt;" WaitForReady="INTERACTIVE" />
                                            </ui:SendHotkey.Target>
                                          </ui:SendHotkey>
                                          <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="enter" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                            <ui:SendHotkey.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                            </ui:SendHotkey.Target>
                                          </ui:SendHotkey>
                                          <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                            <ui:SendHotkey.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                            </ui:SendHotkey.Target>
                                          </ui:SendHotkey>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope: file" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="[filePath]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_3">
                            <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet: From user send to us" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_1" Index="0" Sheet="[wbSheet]" />
                            <ui:ExcelCopySheet DestinationFilePath="[AllFulFilledFormFilePath]" DestinationSheetName="[recipientEmail.ToString]" DisplayName="Copy Sheet: that user send to us to our main DB" sap2010:WorkflowViewState.IdRef="ExcelCopySheet_1" SheetName="[wbSheet]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                    <Sequence DisplayName="Sequence for change Status in the excel and in the RecipientDT, DT_WithAllRecipients" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Assign DisplayName="Assign testVariable" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[indexOfAColumn]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Convert.ToChar(65+DT_WithAllRecipients.Columns.IndexOf("Status") ).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign testVariableIndex" sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[indexOfARow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[(DT_WithAllRecipients.Rows.IndexOf(DT_WithAllRecipients.Select("Email =" + "'" + recipientEmail + "'")(0)) + 2).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:WriteCell Cell="[indexOfAColumn + indexOfARow]" DisplayName="Write Cell: To the Recipient.xlsx" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Sheet1" Text="Completed" WorkbookPath="[RecipientsFilePath]" />
                      <Assign DisplayName="Assign: To the RecipientDT Status = Sender" sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[row.Item("Status")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">["Completed"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign: To The DT_WithAllRecipients" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[DT_WithAllRecipients.Rows(Convert.ToInt32(indexOfARow) - 2).Item("Status")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">["Completed"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
      <ui:FilterDataTable DataTable="[RecipientDT]" DisplayName="Filter Data Table: Remove rows with Status: &quot;Completed&quot;" FilterRowsMode="Remove" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[RecipientDT]" SelectColumnsMode="Remove">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Status"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["Completed"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
      </ui:FilterDataTable>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End: &quot; + compName]" />
    <sads:DebugSymbol.Symbol>d1ZDOlxVc2Vyc1xhcGV0cm92MDEwXERvY3VtZW50c1xVaVBhdGhcVWlEZW1vXERlbW9Sb2JvdFxTYXZlRnVsbEluRmlsZVRvVGhlRGF0YUJhc2UueGFtbH5RA8wCDgIBAVM0U1ECAQJhBWGXAQMBpwFiBWLbAQMBpgFjBckCEAIBBsoCBcoClQECAQNhcmGUAQMBqAFkB7UCFwIBDrYCB8gCHAIBB8oCcsoCkgECAQRkOGRHAwGkAWoNsgIYAgEPuwI4uwJCAgENvgI4vgJFAgEMtgLhAbYC8AECAQq2AiW2AjQCAQhrD28fAwGeAXAPsQIUAgEQbTttQwMBogFrsQFruAEDAaABa1JrWgMBnwFwHXA8AgERchOvAh4CARNzFXclAwGYAXgVygEgAgFaywEV/gEwAgE6/wEViwIwAgErjAIVrgIgAgEUdUF1UQMBnAFzvgFzxQEDAZoBc1hzXwMBmQF6GZEBJAMBhQGZAR3GASgCAVvLAcgBywH2AQIBWdEBG/sBJgIBO/8BxgH/AdIBAgE4hQIbiAImAgEsjQIXlAIgAgEnlQIXnAIgAgEjnQIXnQLzAQIBG54CF6UCIAIBGKYCF60CIAIBFXsbggEkAwGUAYMBG4oBJAMBkAGLARuLAbYBAwGLAYwBG5ABIAMBhgGaAR/FASoCAVzSAR3SAeEBAgFW0wEd+gEqAgE8hgIdhgLGAQIBNIcCHYcCmwICAS2SAkKSAo8BAgEqjwJDjwJTAgEomgJCmgK8AQIBJpcCQ5cCUAIBJJ0CKp0CSgIBIJ0CwQGdAswBAgEfnQKzAZ0CuwECAR6dAtoBnQLwAQIBHKMCQqMCTwIBGqACQ6ACVwIBGasCQqsCTwIBF6gCQ6gCjwECARaAAUaAAZEBAwGXAX1HfVMDAZUBiAFGiAFpAwGTAYUBR4UBUQMBkQGLAVWLAWIDAY4BiwGXAYsBowEDAYwBjAEpjAE2AwGHAY4BH44BtgEDAYkBmwEhoQEvAgF3ogEhqQEqAgFzqgEhsQEqAgFvsgEhsgGKAQIBbLMBIbMB+gECAWS0ASG7ASoCAWG8ASHDASoCAV7EASHEAV0CAV3SAbQB0gHeAQIBV9MB3gHTAYgCAgFU2QEj9wEuAgE9hgKuAYYCsQECATeGArgBhgLDAQIBNYcCRIcCYAIBMocCdocCkQECATCHAo0ChwKYAgIBLo4BR44BiQEDAYoBmwHhBJsB8wQDAYMBngFOngFcAwGBAZsBjAGbAc8CAwGAAZsB0gSbAd0EAgF/mwH7ApsBiwMCAX2bAZQEmwGZBAIBfJsBuQSbAckEAgF7mwH+A5sBjgQCAXmbAeIDmwH0AwIBeKcBTKcBmQECAXakAU2kAV0CAXSvAUyvAcYBAgFyrAFNrAFaAgFwsgF4sgGHAQIBbbMBNLMBVAIBabMBywGzAdMBAgFoswG9AbMBxQECAWezAeEBswH3AQIBZbkBTLkBVgIBY7YBTbYBYQIBYsEBTMEBVgIBYL4BTb4BmQECAV/aASX2ASoCAT7aATPaAVUCAT/cASn0ATQCAULdASvdAfkBAgFO3gEr5AE/AgFK5QEr6QE7AgFH6gEr7gE7AgFF7wEr8wE7AgFD3QGmAd0B3gECAVHdAeUB3QH2AQIBT+EBMeEBYAIBTd4BywHeAdwBAgFL5wG+AecBygICAUnlAZMC5QGYAgIBSOoBigLqAZECAgFG7wGKAu8BjQICAUQ=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="761.333333333333,94.6666666666667" />
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="761.333333333333,113.333333333333" />
      <sap2010:ViewStateData Id="GetRowItem_1" sap:VirtualizedContainerService.HintSize="686.666666666667,64" />
      <sap2010:ViewStateData Id="GetRowItem_2" sap:VirtualizedContainerService.HintSize="538.666666666667,64" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="PathExists_1" sap:VirtualizedContainerService.HintSize="464,90.6666666666667" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,214" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="486,672.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="314,149.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="314,62.6666666666667" />
      <sap2010:ViewStateData Id="WriteCell_1" sap:VirtualizedContainerService.HintSize="314,114.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Continue_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,1000.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="358,1124.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="490.666666666667,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="538.666666666667,52.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelGetWorkbookSheets_2" sap:VirtualizedContainerService.HintSize="502.666666666667,22" />
      <sap2010:ViewStateData Id="ExcelGetWorkbookSheet_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="314,58.6666666666667" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="314,155.333333333333" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="314,117.333333333333" />
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="314,117.333333333333" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="336,754.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,905.333333333333" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="486,1029.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="502.666666666667,1164.66666666667" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="524.666666666667,1350.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_4" sap:VirtualizedContainerService.HintSize="538.666666666667,1459.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelGetWorkbookSheet_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ExcelCopySheet_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="538.666666666667,316.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="WriteCell_2" sap:VirtualizedContainerService.HintSize="314,114.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="538.666666666667,52.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="560.666666666667,2229.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="686.666666666667,2383.33333333333" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="708.666666666667,2611.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="739.333333333333,2764" />
      <sap2010:ViewStateData Id="FilterDataTable_3" sap:VirtualizedContainerService.HintSize="739.333333333333,58.6666666666667" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="761.333333333333,2986.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="761.333333333333,94.6666666666667" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="783.333333333333,3533.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SaveFullInFileToTheDataBase_1" sap:VirtualizedContainerService.HintSize="823.333333333333,3706" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>